name: Android UI (Ubuntu - Optimized)

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:

jobs:
  ui-tests:
    runs-on: ubuntu-latest
    env:
      PYTHONUNBUFFERED: "1"
      APPIUM_LOG_LEVEL: "info"
      GDRIVE_ROOT_FOLDER_ID: ${{ secrets.GDRIVE_ROOT_FOLDER_ID }}
      GDRIVE_FILE_PATH: ${{ secrets.GDRIVE_FILE_PATH }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Tools (Java, Node, Python, Appium, ADB)
        run: |
          # Instalar dependencias de Python
          python -m pip install -U pip
          pip install -r requirements.txt allure-behave

          # Instalar Appium y drivers
          npm i -g appium@next
          appium -v
          appium driver install uiautomator2

      - name: Download APK from Drive
        uses: rclone/rclone-action@v2.2.0
        with:
          rclone_config: ${{ secrets.RCLONE_CONFIG_GDRIVE }}
          rclone_args: copyto gdrive:${{ env.GDRIVE_FILE_PATH }} ${{ runner.temp }}/app.apk

      - name: Run Android Emulator and UI Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: google_apis
          arch: x86
          avd-name: ci_api29_googleapis_x86
          force-avd-creation: true
          disable-animations: true
          emulator-options: >-
            -no-window -no-boot-anim -noaudio -gpu swiftshader_indirect
            -no-snapshot-save -no-snapshot -wipe-data -no-metrics
            -prop persist.sys.locale=en-US
          script: |
            set -euo pipefail

            # Iniciar Appium en segundo plano
            appium --log-level ${APPIUM_LOG_LEVEL:-info} > appium.log 2>&1 &

            # Esperar a que Appium se inicie
            timeout 90 lsof -i :4723 || { echo "Appium no se inició a tiempo."; exit 1; }

            # Esperar a que el emulador esté listo
            adb wait-for-device
            adb shell "while [ -z \"\$(getprop sys.boot_completed)\" ]; do sleep 1; done;"

            # Instalar APK y ejecutar tests
            adb install -r -g ${{ runner.temp }}/app.apk
            behave -f allure_behave.formatter:AllureFormatter -o allure-results ./features
      
      - name: Generate and Publish Allure Report
        if: always()
        uses: simple-elf/allure-report-action@v1.7.1
        with:
          allure_results: allure-results
          name: Allure Test Report
      
      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug-logs
          path: appium.log
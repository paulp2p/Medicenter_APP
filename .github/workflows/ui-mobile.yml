name: Android UI (Appium)

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  ui-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      PYTHONUNBUFFERED: "1"
      APPIUM_LOG_LEVEL: "info"

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with: { distribution: temurin, java-version: "17" }

      - uses: actions/setup-node@v4
        with: { node-version: "20" }

      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }

      - name: Install Python deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt

      - name: Install Appium 3 + Android driver
        run: |
          npm i -g appium@next
          appium -v
          appium driver install uiautomator2

      - name: Install rclone
        run: curl -fsSL https://rclone.org/install.sh | sudo bash

      - name: Download APK from Drive (rclone + SA, path)
        env:
          RCLONE_CONFIG_GDRIVE_TYPE: drive
          RCLONE_CONFIG_GDRIVE_SCOPE: drive
          RCLONE_CONFIG_GDRIVE_SERVICE_ACCOUNT_CREDENTIALS: ${{ secrets.GDRIVE_SA_JSON }}
          RCLONE_CONFIG_GDRIVE_ROOT_FOLDER_ID: ${{ secrets.GDRIVE_ROOT_FOLDER_ID }}
          GDRIVE_FILE_PATH: ${{ secrets.GDRIVE_FILE_PATH }}
        run: |
          set -euo pipefail
          mkdir -p "$RUNNER_TEMP/apk"
          rclone copyto "gdrive:${GDRIVE_FILE_PATH}" "$RUNNER_TEMP/apk/$(basename "${GDRIVE_FILE_PATH}")" -P
          test -f "$RUNNER_TEMP/apk/$(basename "${GDRIVE_FILE_PATH}")"
          echo "APP_PATH=$RUNNER_TEMP/apk/$(basename "${GDRIVE_FILE_PATH}")" >> $GITHUB_ENV
          ls -lh "$RUNNER_TEMP/apk/$(basename "${GDRIVE_FILE_PATH}")"

      - name: Ensure lsof
        run: sudo apt-get update && sudo apt-get install -y lsof

      - name: Run emulator (API 29 x86) + tests (Behave)
        uses: ReactiveCircus/android-emulator-runner@v2
        with:
          api-level: 29
          arch: x86
          target: default
          avd-name: ci_api29_min
          emulator-port: 5554
          force-avd-creation: true
          disable-animations: true
          disable-linux-hw-accel: true
          emulator-boot-timeout: 1800
          emulator-options: "-no-window -no-snapshot -no-boot-anim -gpu swiftshader_indirect -noaudio -accel off -wipe-data -no-metrics"
          pre-emulator-launch-script: |
            adb kill-server || true
            rm -rf ~/.android/avd/ci_api29_min.avd || true
          script: |
            set -eu
            appium --log-level ${APPIUM_LOG_LEVEL:-info} > appium.log 2>&1 &
            i=0; while ! lsof -i :4723 >/dev/null 2>&1; do i=$((i+1)); [ $i -ge 90 ] && { echo "Appium no iniciÃ³"; exit 1; }; sleep 1; done
            i=0; while [ "$(adb -s emulator-5554 shell getprop sys.boot_completed 2>/dev/null | tr -d '\r')" != "1" ]; do i=$((i+1)); [ $i -ge 900 ] && { echo "Timeout boot"; exit 1; }; sleep 1; done
            i=0; while ! adb -s emulator-5554 shell cmd package list packages >/dev/null 2>&1; do i=$((i+1)); [ $i -ge 300 ] && { echo "Timeout esperando PackageManager"; exit 1; }; sleep 1; done
            adb install -r -g "$APP_PATH" || { echo "adb install FAILED"; adb logcat -d | tail -n 400 > logcat_install.txt || true; exit 1; }
            mkdir -p allure-results
            behave -t "not sms" -f allure_behave.formatter:AllureFormatter -o allure-results ./features

      - name: Generate Allure HTML
        if: always()
        run: |
          sudo apt-get update && sudo apt-get install -y unzip > /dev/null
          curl -sL -o allure.zip https://repo1.maven.org/maven2/io/qameta/allure/allure-commandline/2.25.0/allure-commandline-2.25.0.zip
          unzip -q allure.zip -d $RUNNER_TEMP
          $RUNNER_TEMP/allure-2.25.0/bin/allure generate allure-results -o allure-report || true

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: run-artifacts
          path: |
            appium.log
            logcat_install.txt
            allure-results
            allure-report
            **/screenshots/**

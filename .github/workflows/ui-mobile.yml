name: Android UI (Appium)

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  ui-tests:
    runs-on: macos-latest
    timeout-minutes: 60

    env:
      PYTHONUNBUFFERED: "1"
      # Appium log level opcional: info | debug | warn | error
      APPIUM_LOG_LEVEL: "info"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java (Temurin 17)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt

      - name: Install Appium 2 + Android driver
        run: |
          npm install -g appium@2
          appium driver install uiautomator2

      # --- Descarga privada de la APK desde Drive (Service Account + ruta) ---
      - name: Install rclone
        run: |
          curl -fsSL https://rclone.org/install.sh | sudo bash

      - name: Download APK from Drive (rclone + SA, path)
        env:
          RCLONE_CONFIG_GDRIVE_TYPE: drive
          RCLONE_CONFIG_GDRIVE_SCOPE: drive
          RCLONE_CONFIG_GDRIVE_SERVICE_ACCOUNT_CREDENTIALS: ${{ secrets.GDRIVE_SA_JSON }}
          # Como tu ROOT es la carpeta "CI", tu FILE_PATH es solo el nombre del archivo
          RCLONE_CONFIG_GDRIVE_ROOT_FOLDER_ID: ${{ secrets.GDRIVE_ROOT_FOLDER_ID }}
          GDRIVE_FILE_PATH: ${{ secrets.GDRIVE_FILE_PATH }}
        run: |
          set -euo pipefail
          mkdir -p "$RUNNER_TEMP/apk"
          SRC="gdrive:${GDRIVE_FILE_PATH}"
          DEST="$RUNNER_TEMP/apk/$(basename "${GDRIVE_FILE_PATH}")"
          echo "Copiando: $SRC -> $DEST"
          rclone copyto "$SRC" "$DEST" -P
          test -f "$DEST"
          echo "APP_PATH=$DEST" >> $GITHUB_ENV
          ls -lh "$DEST"

      # --- Emulador + ejecución de tests ---
      - name: Run emulator & tests (Behave)
        uses: ReactiveCircus/android-emulator-runner@v2
        with:
          api-level: 33
          arch: x86_64
          target: google_apis
          force-avd-creation: true
          disable-animations: true
          emulator-options: "-no-snapshot -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim"
          script: |
            set -euo pipefail
            appium --log-level $APPIUM_LOG_LEVEL > appium.log 2>&1 &
            sleep 5
            lsof -i :4723 || (echo "Appium no inició" && exit 1)

            mkdir -p allure-results
            # Ejecuta tus features; si falla, el job marca fallo pero subimos artefactos igual
            behave -f allure_behave.formatter:AllureFormatter -o allure-results ./features

      # --- Artefactos ---
      - name: Upload allure-results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results

      - name: Upload run artifacts (logs + screenshots)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: run-artifacts
          path: |
            appium.log
            **/screenshots/**

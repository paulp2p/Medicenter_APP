name: Android UI (Appium)

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  ui-tests:
    runs-on: ubuntu-latest
    env:
      PYTHONUNBUFFERED: "1"
      APPIUM_LOG_LEVEL: "info"
      DISABLE_MOCK_SMS: "1"
      CI_FIXED_OTP: "000000"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java (Temurin 17)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install tools (pip deps + OS + rclone + Appium)
        run: |
          set -euo pipefail
          python -m pip install -U pip
          pip install -r requirements.txt allure-behave behave-html-formatter
          sudo apt-get update
          sudo apt-get install -y lsof unzip
          curl -fsSL https://rclone.org/install.sh | sudo bash
          npm i -g appium@next
          appium -v
          appium driver install uiautomator2

      - name: Download APK from Drive (rclone + SA)
        env:
          RCLONE_CONFIG_GDRIVE_TYPE: drive
          RCLONE_CONFIG_GDRIVE_SCOPE: drive
          RCLONE_CONFIG_GDRIVE_SERVICE_ACCOUNT_CREDENTIALS: ${{ secrets.GDRIVE_SA_JSON }}
          RCLONE_CONFIG_GDRIVE_ROOT_FOLDER_ID: ${{ secrets.GDRIVE_ROOT_FOLDER_ID }}
          GDRIVE_FILE_PATH: ${{ secrets.GDRIVE_FILE_PATH }}
        run: |
          set -euo pipefail
          mkdir -p "$RUNNER_TEMP/apk"
          SRC="gdrive:${GDRIVE_FILE_PATH}"
          DEST="$RUNNER_TEMP/apk/$(basename "${GDRIVE_FILE_PATH}")"
          echo "Copiando: $SRC -> $DEST"
          rclone copyto "$SRC" "$DEST" -P
          test -f "$DEST"
          echo "APP_PATH=$DEST" >> $GITHUB_ENV
          ls -lh "$DEST"

      - name: Run emulator (API 30, Google APIs) + tests
        uses: ReactiveCircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          avd-name: ci_api30_googleapis_x86_64
          force-avd-creation: true
          disable-animations: true
          # no mates el HW accel salvo que falle; podés quitar esta línea:
          disable-linux-hw-accel: true
          emulator-boot-timeout: 1800
          # Reemplaza por opciones SIN snapshot y con locale en-US desde el arranque
          emulator-options: >-
            -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
            -no-snapshot -no-snapshot-save -wipe-data -no-metrics
            -prop persist.sys.locale=en-US
            -prop persist.sys.language=en
            -prop persist.sys.country=US
          # quitá el kill de adb acá
          pre-emulator-launch-script: |
            rm -rf ~/.android/avd/ci_api30_googleapis_x86_64.avd || true
          script: |
            set -euxo pipefail
            export ANDROID_EMULATOR_WAIT_TIME_BEFORE_KILL=5

            # 1) Appium en background con control de PID
            appium --log-level ${APPIUM_LOG_LEVEL:-info} > appium.log 2>&1 &
            APPIUM_PID=$!

            # Esperar puerto 4723
            for i in $(seq 1 90); do lsof -i :4723 >/dev/null 2>&1 && break || sleep 1; done
            lsof -i :4723 >/dev/null 2>&1 || { echo "Appium no inició"; exit 1; }

            # 2) Forzar locale en-US y per-app (13+)
            adb shell "cmd locale set en-US" || true
            adb shell "cmd activity set-app-language com.siltium.medicenter en-US" || true

            # 3) Instalar APK
            adb install -r -g "$APP_PATH" || {
              echo "adb install FAILED"
              adb logcat -d | tail -n 800 > logcat_install.txt || true
              # cerrar appium antes de salir para no romper el teardown
              kill -15 "$APPIUM_PID" || true; wait "$APPIUM_PID" || true
              exit 1
            }

            # 4) Smoke launch rápido
            adb shell cmd package resolve-activity -a android.intent.action.MAIN -c android.intent.category.LAUNCHER com.siltium.medicenter || {
              adb shell dumpsys package com.siltium.medicenter > dumpsys_pkg.txt || true
              kill -15 "$APPIUM_PID" || true; wait "$APPIUM_PID" || true
              exit 1
            }
            adb shell am start -W -n "com.siltium.medicenter/.MainActivity" || true
            sleep 5
            adb shell dumpsys activity activities | grep mResumedActivity | tee resumed.txt || true
            if ! grep -q com.siltium.medicenter resumed.txt; then
              adb logcat -d -v time | tail -n 1500 > logcat_crash_pre_tests.txt || true
            fi

            # 5) Tests + Allure
            mkdir -p allure-results
            behave -f allure_behave.formatter:AllureFormatter -o allure-results ./features

            # 6) Cierre limpio de Appium ANTES de que el action intente matar el emulador
            kill -15 "$APPIUM_PID" || true
            wait "$APPIUM_PID" || true


      - name: Generate Allure HTML
        if: always()
        run: |
          if [ ! -d allure-results ] || [ -z "$(ls -A allure-results)" ]; then
            echo "No hay resultados en allure-results. Genero placeholder."
            mkdir -p allure-report
            echo "<h1>Sin resultados</h1>" > allure-report/index.html
          else
            curl -sL -o allure.zip https://repo1.maven.org/maven2/io/qameta/allure/allure-commandline/2.25.0/allure-commandline-2.25.0.zip
            unzip -q allure.zip -d $RUNNER_TEMP
            $RUNNER_TEMP/allure-2.25.0/bin/allure generate allure-results -o allure-report --clean
          fi

      - name: Upload artifacts (logs + allure)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: run-artifacts
          path: |
            appium.log
            resumed.txt
            dumpsys_pkg.txt
            logcat_install.txt
            logcat_crash_pre_tests.txt
            allure-results
            allure-report
            **/screenshots/**
          if-no-files-found: warn

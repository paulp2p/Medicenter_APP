name: Android UI (Ubuntu - Simple Fixed)

on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:

jobs:
  ui-tests:
    runs-on: ubuntu-latest
    env:
      PYTHONUNBUFFERED: "1"
      APPIUM_LOG_LEVEL: "info"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install tools (pip + OS + rclone + Appium)
        run: |
          set -eu
          python -m pip install -U pip
          pip install -r requirements.txt allure-behave
          sudo apt-get update
          sudo apt-get install -y lsof unzip zip
          curl -fsSL https://rclone.org/install.sh | sudo bash
          npm i -g appium@next
          appium -v
          appium driver install uiautomator2

      - name: Download APK from Drive (rclone + Service Account)
        env:
          RCLONE_CONFIG_GDRIVE_TYPE: drive
          RCLONE_CONFIG_GDRIVE_SCOPE: drive
          RCLONE_CONFIG_GDRIVE_SERVICE_ACCOUNT_CREDENTIALS: ${{ secrets.GDRIVE_SA_JSON }}
          RCLONE_CONFIG_GDRIVE_ROOT_FOLDER_ID: ${{ secrets.GDRIVE_ROOT_FOLDER_ID }}
          GDRIVE_FILE_PATH: ${{ secrets.GDRIVE_FILE_PATH }}
        run: |
          set -eu
          SRC="gdrive:${GDRIVE_FILE_PATH}"
          DEST="$RUNNER_TEMP/app.apk"
          rclone copyto "$SRC" "$DEST" -P
          test -f "$DEST"
          echo "APP_PATH=$DEST" >> $GITHUB_ENV
          ls -lh "$DEST"

      - name: Run emulator (API 29, Google APIs) + tests
        uses: ReactiveCircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: google_apis
          arch: x86
          avd-name: ci_api29_googleapis_x86
          force-avd-creation: true
          disable-animations: true
          disable-linux-hw-accel: true           # evita KVM; estable en hosted
          emulator-boot-timeout: 1800
          # sin -prop persist.sys.* (solo warnings); seteo idioma vÃ­a ADB
          emulator-options: >-
            -no-window -no-boot-anim -noaudio -gpu swiftshader_indirect
            -no-snapshot -no-snapshot-save -wipe-data -no-metrics
          # OJO: el action ejecuta cada lÃ­nea por separado (/bin/sh).
          # Por eso todo va en UNA sola lÃ­nea con ; y &&.
          script: >-
            appium --log-level info > appium.log 2>&1 & sleep 2;
            i=0; while ! lsof -i :4723 >/dev/null 2>&1; do i=$((i+1)); [ $i -ge 90 ] && { echo "Appium no iniciÃ³"; exit 1; }; sleep 1; done;
            adb wait-for-device;
            i=0; while [ "$(adb shell getprop sys.boot_completed 2>/dev/null | tr -d '\r')" != "1" ]; do i=$((i+1)); [ $i -ge 900 ] && { echo "Timeout boot"; exit 1; }; sleep 1; done;
            # ðŸ”¹ Gate para PackageManager (esto evita que 'pm clear'/installs cuelguen)
            i=0; while ! adb shell cmd package list packages >/dev/null 2>&1; do i=$((i+1)); [ $i -ge 300 ] && { echo "Timeout esperando PackageManager"; exit 1; }; sleep 1; done;
            sleep 5;
            adb install -r -g "$APP_PATH" || { echo "adb install FAILED"; adb logcat -d | tail -n 800 > logcat_install.txt || true; pkill -f appium || true; exit 1; };
            mkdir -p allure-results;
            behave -f allure_behave.formatter:AllureFormatter -o allure-results ./features;
            pkill -f appium || true

      - name: Generate Allure HTML + ZIP
        if: always()
        run: |
          set -eu
          if [ -d allure-results ] && [ -n "$(ls -A allure-results || true)" ]; then
            curl -sL -o allure.zip https://repo1.maven.org/maven2/io/qameta/allure/allure-commandline/2.25.0/allure-commandline-2.25.0.zip
            unzip -q allure.zip -d $RUNNER_TEMP
            $RUNNER_TEMP/allure-2.25.0/bin/allure generate allure-results -o allure-report --clean
          else
            mkdir -p allure-report
            echo "<h1>Sin resultados</h1>" > allure-report/index.html
          fi
          zip -r allure-report.zip allure-report

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: run-artifacts
          path: |
            allure-report.zip
            appium.log
            logcat_install.txt
          if-no-files-found: warn

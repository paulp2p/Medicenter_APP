name: APK download smoke

on:
  workflow_dispatch:

jobs:
  download-apk:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install rclone
        run: |
          curl -fsSL https://rclone.org/install.sh | sudo bash

      # --- Debug: listar lo que ve rclone desde el ROOT_FOLDER_ID ---
      - name: Debug Drive root (lsf)
        env:
          RCLONE_CONFIG_GDRIVE_TYPE: drive
          RCLONE_CONFIG_GDRIVE_SCOPE: drive
          RCLONE_CONFIG_GDRIVE_SERVICE_ACCOUNT_CREDENTIALS: ${{ secrets.GDRIVE_SA_JSON }}
          RCLONE_CONFIG_GDRIVE_ROOT_FOLDER_ID: ${{ secrets.GDRIVE_ROOT_FOLDER_ID }}
          GDRIVE_FILE_PATH: ${{ secrets.GDRIVE_FILE_PATH }}
        run: |
          set -euo pipefail
          echo "Listando raíz (gdrive:)"
          rclone lsf "gdrive:" --dirs-only || true
          echo "------"
          SUBDIR="$(dirname "${GDRIVE_FILE_PATH}")"
          if [ "$SUBDIR" != "." ]; then
            echo "Listando subcarpeta gdrive:$SUBDIR"
            rclone lsf "gdrive:$SUBDIR" || true
          fi

      # --- Descarga estricta: falla si el archivo no existe ---
      - name: Download APK from Drive (rclone + SA, path, strict)
        env:
          RCLONE_CONFIG_GDRIVE_TYPE: drive
          RCLONE_CONFIG_GDRIVE_SCOPE: drive
          RCLONE_CONFIG_GDRIVE_SERVICE_ACCOUNT_CREDENTIALS: ${{ secrets.GDRIVE_SA_JSON }}
          RCLONE_CONFIG_GDRIVE_ROOT_FOLDER_ID: ${{ secrets.GDRIVE_ROOT_FOLDER_ID }}
          GDRIVE_FILE_PATH: ${{ secrets.GDRIVE_FILE_PATH }}
        run: |
          set -euo pipefail
          mkdir -p "$RUNNER_TEMP/apk"
          SRC="gdrive:${GDRIVE_FILE_PATH}"
          DEST="$RUNNER_TEMP/apk/$(basename "${GDRIVE_FILE_PATH}")"
          echo "Copiando: $SRC -> $DEST"
          # copyto trata SRC como archivo exacto (falla si no existe)
          rclone copyto "$SRC" "$DEST" -P
          test -f "$DEST"
          echo "APP_PATH=$DEST" >> "$GITHUB_ENV"
          ls -lh "$DEST"
          sha256sum "$DEST" | tee apk.sha256

      - name: Save hash and metadata (robusto)
        if: always()
        run: |
          set -euo pipefail
          : > apk_info.txt
          if [ -n "${APP_PATH:-}" ] && [ -f "${APP_PATH:-}" ]; then
            echo "File: $(basename "${APP_PATH}")" >> apk_info.txt
            echo "Path: ${APP_PATH}" >> apk_info.txt
            echo "Size (bytes): $(stat -c%s "${APP_PATH}")" >> apk_info.txt
            # si no existe apk.sha256 por alguna razón, créalo vacío
            [ -f apk.sha256 ] || sha256sum "${APP_PATH}" | tee apk.sha256
            cat apk.sha256 >> apk_info.txt
          else
            echo "APP_PATH no disponible (descarga fallida o ruta incorrecta)." >> apk_info.txt
            echo "NO_HASH" > apk.sha256
          fi
          cat apk_info.txt

      - name: Upload proof (hash + info)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: apk-proof
          path: |
            apk.sha256
            apk_info.txt
